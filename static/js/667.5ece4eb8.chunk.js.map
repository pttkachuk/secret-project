{"version":3,"file":"static/js/667.5ece4eb8.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.0.3\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.0.3\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.0.3 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, isMounted) {\n        const origin = getOrigin(target, transition || {}, this);\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","schedule","microtask","cancel","cancelMicrotask","createRenderBatcher","queueMicrotask","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","useIsomorphicLayoutEffect","postRender","render","animationState","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","LayoutGroupContext","id","createMotionProxy","createConfig","custom","arguments","length","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","concat","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","i","transformName","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","frame","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","invariant","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","push","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","now","clearTime","time","frameData","isProcessing","MotionGlobalConfig","useManualTiming","timestamp","performance","newTime","frameloopDriver","passTimestamp","stop","cancelFrame","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","pendingCancel","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","skipAnimations","setValue","createInstantAnimation","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","add","isNumericalString","addUniqueItem","item","removeItem","index","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","clear","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","steps","process","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","_ref12","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig"],"sourceRoot":""}